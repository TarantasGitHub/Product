/*
Deployment script for ProductDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ProductDatabase"
:setvar DefaultFilePrefix "ProductDatabase"
:setvar DefaultDataPath "C:\DB\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\DB\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Categories]...';


GO
CREATE TABLE [dbo].[Categories] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NOT NULL,
    [Description] VARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Products]...';


GO
CREATE TABLE [dbo].[Products] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NOT NULL,
    [Description] VARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ProductsToCategories]...';


GO
CREATE TABLE [dbo].[ProductsToCategories] (
    [ID]         INT IDENTITY (1, 1) NOT NULL,
    [CategoryID] INT NOT NULL,
    [ProductID]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ProductsToCategories_Categories]...';


GO
ALTER TABLE [dbo].[ProductsToCategories]
    ADD CONSTRAINT [FK_ProductsToCategories_Categories] FOREIGN KEY ([CategoryID]) REFERENCES [dbo].[Categories] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ProductsToCategories_Products]...';


GO
ALTER TABLE [dbo].[ProductsToCategories]
    ADD CONSTRAINT [FK_ProductsToCategories_Products] FOREIGN KEY ([ProductID]) REFERENCES [dbo].[Products] ([ID]);


GO
PRINT N'Creating [dbo].[sp_GetProductsByCategories]...';


GO
CREATE PROCEDURE [dbo].[sp_GetProductsByCategories]
	@CategoryID int	=	NULL,
	@ProductID int	=	NULL
AS
BEGIN

	SELECT	 P.[ID]
			,P.[Name]
			,P.[Description]
			,C.[ID]
			,C.[Name]
			,C.[Description]
	FROM	Products P
	LEFT JOIN	ProductsToCategories PTC	ON	P.ID			=	PTC.ProductID
	LEFT JOIN	Categories C				ON	PTC.CategoryID	=	C.ID
	WHERE	(@ProductID IS NULL OR P.ID = @ProductID)
		AND	(@CategoryID IS NULL OR PTC.CategoryID = @CategoryID)

END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
insert into Products ([Name], [Description])
values	 ('Product_1', 'Description_for_product_1')
		,('Product_2', 'Description_for_product_2')
		,('Product_3', 'Description_for_product_3')
		,('Product_4', 'Description_for_product_4')
		,('Product_5', 'Description_for_product_5')
		,('Product_6', 'Description_for_product_6')
		,('Product_7', 'Description_for_product_7')
		,('Product_8', 'Description_for_product_8')
		,('Product_9', 'Description_for_product_9')
		,('Product_10', 'Description_for_product_10')
		,('Product_11', 'Description_for_product_11')
insert into Categories([Name], [Description])
values	 ('Category_1', 'Description_for_category_1')
		,('Category_2', 'Description_for_category_2')
		,('Category_3', 'Description_for_category_3')
		,('Category_4', 'Description_for_category_4')
		,('Category_5', 'Description_for_category_5')
		,('Category_6', 'Description_for_category_6')
		,('Category_7', 'Description_for_category_7')
		,('Category_8', 'Description_for_category_8')
		,('Category_9', 'Description_for_category_9')
		,('Category_10', 'Description_for_category_10')
		,('Category_11', 'Description_for_category_11')
insert into ProductsToCategories([CategoryID], [ProductID])
values	 (1, 1)
		,(1, 2)
		,(1, 3)
		,(1, 4)
		,(1, 5)
		,(1, 6)
		,(1, 7)
		,(1, 8)
		,(1, 9)
		,(2, 2)
		,(2, 3)
		,(2, 4)
		,(2, 5)
		,(2, 6)
		,(2, 7)
		,(2, 8)
		,(2, 9)
		,(3, 2)
		,(3, 3)
		,(3, 4)
		,(3, 5)
		,(3, 6)
		,(3, 7)
		,(3, 8)
		,(3, 9)
		,(4, 2)
		,(4, 3)
		,(4, 4)
		,(4, 5)
		,(4, 6)
		,(4, 7)
		,(4, 8)
		,(4, 9)
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
